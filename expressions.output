Terminals unused in grammar

   OCURLY_TOK
   CCURLY_TOK
   OBOX_TOK
   CBOX_TOK
   COMMA_TOK
   SCOLON_TOK
   COLON_TOK
   CLASS_TOK
   FUNC_TOK
   PRIVATE_TOK
   PUBLIC_TOK
   PROTECTED_TOK
   CREATE_TOK
   DESTROY_TOK
   IMPORT_TOK
   STRUCT_TOK
   MODULO_TOK
   ASSIGN_TOK
   INT_TOK
   UNSD_TOK
   STRG_TOK
   BOOL_TOK
   RETURN_TOK
   BREAK_TOK
   CONT_TOK
   IF_TOK
   ELSE_TOK
   WHILE_TOK
   FOR_TOK
   SWITCH_TOK
   CASE_TOK
   NOTHING_TOK


State 9 conflicts: 2 reduce/reduce
State 10 conflicts: 2 reduce/reduce
State 14 conflicts: 2 reduce/reduce
State 16 conflicts: 2 reduce/reduce
State 35 conflicts: 5 shift/reduce
State 38 conflicts: 8 shift/reduce
State 69 conflicts: 8 shift/reduce
State 70 conflicts: 8 shift/reduce
State 71 conflicts: 8 shift/reduce
State 72 conflicts: 8 shift/reduce
State 73 conflicts: 8 shift/reduce
State 74 conflicts: 8 shift/reduce
State 75 conflicts: 8 shift/reduce
State 76 conflicts: 8 shift/reduce
State 77 conflicts: 5 shift/reduce
State 78 conflicts: 5 shift/reduce
State 79 conflicts: 5 shift/reduce
State 80 conflicts: 5 shift/reduce
State 81 conflicts: 5 shift/reduce


Grammar

    0 $accept: expression $end

    1 expression: arithmetic_expression
    2           | boolean_expression
    3           | bitwise_expression

    4 compound_symbol: SYMBOL_TOK
    5                | compound_symbol DOT_TOK SYMBOL_TOK

    6 exponent_numeric_value: FLOATING_TOK
    7                       | INTEGER_TOK

    8 arithmetic_factor: INTEGER_TOK
    9                  | FLOAT_TOK
   10                  | UNSIGNED_TOK
   11                  | exponent_numeric_value CARAT_TOK exponent_numeric_value
   12                  | compound_symbol

   13 arithmetic_expression: arithmetic_factor
   14                      | arithmetic_expression PLUS_TOK arithmetic_expression
   15                      | arithmetic_expression MINUS_TOK arithmetic_expression
   16                      | arithmetic_expression MULT_TOK arithmetic_expression
   17                      | arithmetic_expression DIV_TOK arithmetic_expression
   18                      | MINUS_TOK arithmetic_expression
   19                      | OPAREN_TOK arithmetic_expression CPAREN_TOK

   20 boolean_factor: arithmetic_factor
   21               | TRUE_TOK
   22               | FALSE_TOK
   23               | STRING_TOK

   24 boolean_expression: boolean_factor
   25                   | boolean_expression OR_TOK boolean_expression
   26                   | boolean_expression AND_TOK boolean_expression
   27                   | boolean_expression EQ_TOK boolean_expression
   28                   | boolean_expression NEQ_TOK boolean_expression
   29                   | boolean_expression LEQ_TOK boolean_expression
   30                   | boolean_expression GEQ_TOK boolean_expression
   31                   | boolean_expression MORE_TOK boolean_expression
   32                   | boolean_expression LESS_TOK boolean_expression
   33                   | NOT_TOK boolean_expression
   34                   | OPAREN_TOK boolean_expression CPAREN_TOK

   35 bitwise_factor: INTEGER_TOK
   36               | UNSIGNED_TOK
   37               | compound_symbol

   38 bitwise_expression: bitwise_factor
   39                   | bitwise_expression BIT_AND_TOK bitwise_expression
   40                   | bitwise_expression BIT_OR_TOK bitwise_expression
   41                   | bitwise_expression BIT_XOR_TOK bitwise_expression
   42                   | bitwise_expression BIT_LSH_TOK bitwise_expression
   43                   | bitwise_expression BIT_RSH_TOK bitwise_expression
   44                   | BIT_NOT_TOK bitwise_expression
   45                   | OPAREN_TOK bitwise_expression CPAREN_TOK


Terminals, with rules where they appear

$end (0) 0
error (256)
OPAREN_TOK (258) 19 34 45
CPAREN_TOK (259) 19 34 45
OCURLY_TOK (260)
CCURLY_TOK (261)
OBOX_TOK (262)
CBOX_TOK (263)
COMMA_TOK (264)
SCOLON_TOK (265)
DOT_TOK (266) 5
COLON_TOK (267)
CLASS_TOK (268)
FUNC_TOK (269)
PRIVATE_TOK (270)
PUBLIC_TOK (271)
PROTECTED_TOK (272)
CREATE_TOK (273)
DESTROY_TOK (274)
IMPORT_TOK (275)
STRUCT_TOK (276)
PLUS_TOK (277) 14
MINUS_TOK (278) 15 18
MULT_TOK (279) 16
DIV_TOK (280) 17
MODULO_TOK (281)
ASSIGN_TOK (282)
BIT_NOT_TOK (283) 44
BIT_OR_TOK (284) 40
BIT_AND_TOK (285) 39
BIT_XOR_TOK (286) 41
BIT_LSH_TOK (287) 42
BIT_RSH_TOK (288) 43
INT_TOK (289)
FLOAT_TOK (290) 9
UNSD_TOK (291)
STRG_TOK (292)
BOOL_TOK (293)
RETURN_TOK (294)
BREAK_TOK (295)
CONT_TOK (296)
IF_TOK (297)
ELSE_TOK (298)
WHILE_TOK (299)
FOR_TOK (300)
SWITCH_TOK (301)
CASE_TOK (302)
OR_TOK (303) 25
AND_TOK (304) 26
NOT_TOK (305) 33
EQ_TOK (306) 27
GEQ_TOK (307) 30
LEQ_TOK (308) 29
NEQ_TOK (309) 28
MORE_TOK (310) 31
LESS_TOK (311) 32
TRUE_TOK (312) 21
FALSE_TOK (313) 22
NOTHING_TOK (314)
SYMBOL_TOK (315) 4 5
UNSIGNED_TOK (316) 10 36
INTEGER_TOK (317) 7 8 35
FLOATING_TOK (318) 6
STRING_TOK (319) 23
NEGATION (320)
CARAT_TOK (321) 11


Nonterminals, with rules where they appear

$accept (67)
    on left: 0
expression (68)
    on left: 1 2 3, on right: 0
compound_symbol (69)
    on left: 4 5, on right: 5 12 37
exponent_numeric_value (70)
    on left: 6 7, on right: 11
arithmetic_factor (71)
    on left: 8 9 10 11 12, on right: 13 20
arithmetic_expression (72)
    on left: 13 14 15 16 17 18 19, on right: 1 14 15 16 17 18 19
boolean_factor (73)
    on left: 20 21 22 23, on right: 24
boolean_expression (74)
    on left: 24 25 26 27 28 29 30 31 32 33 34, on right: 2 25 26 27
    28 29 30 31 32 33 34
bitwise_factor (75)
    on left: 35 36 37, on right: 38
bitwise_expression (76)
    on left: 38 39 40 41 42 43 44 45, on right: 3 39 40 41 42 43 44
    45


State 0

    0 $accept: . expression $end

    OPAREN_TOK    shift, and go to state 1
    MINUS_TOK     shift, and go to state 2
    BIT_NOT_TOK   shift, and go to state 3
    FLOAT_TOK     shift, and go to state 4
    NOT_TOK       shift, and go to state 5
    TRUE_TOK      shift, and go to state 6
    FALSE_TOK     shift, and go to state 7
    SYMBOL_TOK    shift, and go to state 8
    UNSIGNED_TOK  shift, and go to state 9
    INTEGER_TOK   shift, and go to state 10
    FLOATING_TOK  shift, and go to state 11
    STRING_TOK    shift, and go to state 12

    expression              go to state 13
    compound_symbol         go to state 14
    exponent_numeric_value  go to state 15
    arithmetic_factor       go to state 16
    arithmetic_expression   go to state 17
    boolean_factor          go to state 18
    boolean_expression      go to state 19
    bitwise_factor          go to state 20
    bitwise_expression      go to state 21


State 1

   19 arithmetic_expression: OPAREN_TOK . arithmetic_expression CPAREN_TOK
   34 boolean_expression: OPAREN_TOK . boolean_expression CPAREN_TOK
   45 bitwise_expression: OPAREN_TOK . bitwise_expression CPAREN_TOK

    OPAREN_TOK    shift, and go to state 1
    MINUS_TOK     shift, and go to state 2
    BIT_NOT_TOK   shift, and go to state 3
    FLOAT_TOK     shift, and go to state 4
    NOT_TOK       shift, and go to state 5
    TRUE_TOK      shift, and go to state 6
    FALSE_TOK     shift, and go to state 7
    SYMBOL_TOK    shift, and go to state 8
    UNSIGNED_TOK  shift, and go to state 9
    INTEGER_TOK   shift, and go to state 10
    FLOATING_TOK  shift, and go to state 11
    STRING_TOK    shift, and go to state 12

    compound_symbol         go to state 14
    exponent_numeric_value  go to state 15
    arithmetic_factor       go to state 16
    arithmetic_expression   go to state 22
    boolean_factor          go to state 18
    boolean_expression      go to state 23
    bitwise_factor          go to state 20
    bitwise_expression      go to state 24


State 2

   18 arithmetic_expression: MINUS_TOK . arithmetic_expression

    OPAREN_TOK    shift, and go to state 25
    MINUS_TOK     shift, and go to state 2
    FLOAT_TOK     shift, and go to state 4
    SYMBOL_TOK    shift, and go to state 8
    UNSIGNED_TOK  shift, and go to state 26
    INTEGER_TOK   shift, and go to state 27
    FLOATING_TOK  shift, and go to state 11

    compound_symbol         go to state 28
    exponent_numeric_value  go to state 15
    arithmetic_factor       go to state 29
    arithmetic_expression   go to state 30


State 3

   44 bitwise_expression: BIT_NOT_TOK . bitwise_expression

    OPAREN_TOK    shift, and go to state 31
    BIT_NOT_TOK   shift, and go to state 3
    SYMBOL_TOK    shift, and go to state 8
    UNSIGNED_TOK  shift, and go to state 32
    INTEGER_TOK   shift, and go to state 33

    compound_symbol     go to state 34
    bitwise_factor      go to state 20
    bitwise_expression  go to state 35


State 4

    9 arithmetic_factor: FLOAT_TOK .

    $default  reduce using rule 9 (arithmetic_factor)


State 5

   33 boolean_expression: NOT_TOK . boolean_expression

    OPAREN_TOK    shift, and go to state 36
    FLOAT_TOK     shift, and go to state 4
    NOT_TOK       shift, and go to state 5
    TRUE_TOK      shift, and go to state 6
    FALSE_TOK     shift, and go to state 7
    SYMBOL_TOK    shift, and go to state 8
    UNSIGNED_TOK  shift, and go to state 26
    INTEGER_TOK   shift, and go to state 27
    FLOATING_TOK  shift, and go to state 11
    STRING_TOK    shift, and go to state 12

    compound_symbol         go to state 28
    exponent_numeric_value  go to state 15
    arithmetic_factor       go to state 37
    boolean_factor          go to state 18
    boolean_expression      go to state 38


State 6

   21 boolean_factor: TRUE_TOK .

    $default  reduce using rule 21 (boolean_factor)


State 7

   22 boolean_factor: FALSE_TOK .

    $default  reduce using rule 22 (boolean_factor)


State 8

    4 compound_symbol: SYMBOL_TOK .

    $default  reduce using rule 4 (compound_symbol)


State 9

   10 arithmetic_factor: UNSIGNED_TOK .
   36 bitwise_factor: UNSIGNED_TOK .

    $end         reduce using rule 10 (arithmetic_factor)
    $end         [reduce using rule 36 (bitwise_factor)]
    CPAREN_TOK   reduce using rule 10 (arithmetic_factor)
    CPAREN_TOK   [reduce using rule 36 (bitwise_factor)]
    BIT_OR_TOK   reduce using rule 36 (bitwise_factor)
    BIT_AND_TOK  reduce using rule 36 (bitwise_factor)
    BIT_XOR_TOK  reduce using rule 36 (bitwise_factor)
    BIT_LSH_TOK  reduce using rule 36 (bitwise_factor)
    BIT_RSH_TOK  reduce using rule 36 (bitwise_factor)
    $default     reduce using rule 10 (arithmetic_factor)


State 10

    7 exponent_numeric_value: INTEGER_TOK .
    8 arithmetic_factor: INTEGER_TOK .
   35 bitwise_factor: INTEGER_TOK .

    $end         reduce using rule 8 (arithmetic_factor)
    $end         [reduce using rule 35 (bitwise_factor)]
    CPAREN_TOK   reduce using rule 8 (arithmetic_factor)
    CPAREN_TOK   [reduce using rule 35 (bitwise_factor)]
    BIT_OR_TOK   reduce using rule 35 (bitwise_factor)
    BIT_AND_TOK  reduce using rule 35 (bitwise_factor)
    BIT_XOR_TOK  reduce using rule 35 (bitwise_factor)
    BIT_LSH_TOK  reduce using rule 35 (bitwise_factor)
    BIT_RSH_TOK  reduce using rule 35 (bitwise_factor)
    CARAT_TOK    reduce using rule 7 (exponent_numeric_value)
    $default     reduce using rule 8 (arithmetic_factor)


State 11

    6 exponent_numeric_value: FLOATING_TOK .

    $default  reduce using rule 6 (exponent_numeric_value)


State 12

   23 boolean_factor: STRING_TOK .

    $default  reduce using rule 23 (boolean_factor)


State 13

    0 $accept: expression . $end

    $end  shift, and go to state 39


State 14

    5 compound_symbol: compound_symbol . DOT_TOK SYMBOL_TOK
   12 arithmetic_factor: compound_symbol .
   37 bitwise_factor: compound_symbol .

    DOT_TOK  shift, and go to state 40

    $end         reduce using rule 12 (arithmetic_factor)
    $end         [reduce using rule 37 (bitwise_factor)]
    CPAREN_TOK   reduce using rule 12 (arithmetic_factor)
    CPAREN_TOK   [reduce using rule 37 (bitwise_factor)]
    BIT_OR_TOK   reduce using rule 37 (bitwise_factor)
    BIT_AND_TOK  reduce using rule 37 (bitwise_factor)
    BIT_XOR_TOK  reduce using rule 37 (bitwise_factor)
    BIT_LSH_TOK  reduce using rule 37 (bitwise_factor)
    BIT_RSH_TOK  reduce using rule 37 (bitwise_factor)
    $default     reduce using rule 12 (arithmetic_factor)


State 15

   11 arithmetic_factor: exponent_numeric_value . CARAT_TOK exponent_numeric_value

    CARAT_TOK  shift, and go to state 41


State 16

   13 arithmetic_expression: arithmetic_factor .
   20 boolean_factor: arithmetic_factor .

    $end        reduce using rule 13 (arithmetic_expression)
    $end        [reduce using rule 20 (boolean_factor)]
    CPAREN_TOK  reduce using rule 13 (arithmetic_expression)
    CPAREN_TOK  [reduce using rule 20 (boolean_factor)]
    PLUS_TOK    reduce using rule 13 (arithmetic_expression)
    MINUS_TOK   reduce using rule 13 (arithmetic_expression)
    MULT_TOK    reduce using rule 13 (arithmetic_expression)
    DIV_TOK     reduce using rule 13 (arithmetic_expression)
    $default    reduce using rule 20 (boolean_factor)


State 17

    1 expression: arithmetic_expression .
   14 arithmetic_expression: arithmetic_expression . PLUS_TOK arithmetic_expression
   15                      | arithmetic_expression . MINUS_TOK arithmetic_expression
   16                      | arithmetic_expression . MULT_TOK arithmetic_expression
   17                      | arithmetic_expression . DIV_TOK arithmetic_expression

    PLUS_TOK   shift, and go to state 42
    MINUS_TOK  shift, and go to state 43
    MULT_TOK   shift, and go to state 44
    DIV_TOK    shift, and go to state 45

    $default  reduce using rule 1 (expression)


State 18

   24 boolean_expression: boolean_factor .

    $default  reduce using rule 24 (boolean_expression)


State 19

    2 expression: boolean_expression .
   25 boolean_expression: boolean_expression . OR_TOK boolean_expression
   26                   | boolean_expression . AND_TOK boolean_expression
   27                   | boolean_expression . EQ_TOK boolean_expression
   28                   | boolean_expression . NEQ_TOK boolean_expression
   29                   | boolean_expression . LEQ_TOK boolean_expression
   30                   | boolean_expression . GEQ_TOK boolean_expression
   31                   | boolean_expression . MORE_TOK boolean_expression
   32                   | boolean_expression . LESS_TOK boolean_expression

    OR_TOK    shift, and go to state 46
    AND_TOK   shift, and go to state 47
    EQ_TOK    shift, and go to state 48
    GEQ_TOK   shift, and go to state 49
    LEQ_TOK   shift, and go to state 50
    NEQ_TOK   shift, and go to state 51
    MORE_TOK  shift, and go to state 52
    LESS_TOK  shift, and go to state 53

    $default  reduce using rule 2 (expression)


State 20

   38 bitwise_expression: bitwise_factor .

    $default  reduce using rule 38 (bitwise_expression)


State 21

    3 expression: bitwise_expression .
   39 bitwise_expression: bitwise_expression . BIT_AND_TOK bitwise_expression
   40                   | bitwise_expression . BIT_OR_TOK bitwise_expression
   41                   | bitwise_expression . BIT_XOR_TOK bitwise_expression
   42                   | bitwise_expression . BIT_LSH_TOK bitwise_expression
   43                   | bitwise_expression . BIT_RSH_TOK bitwise_expression

    BIT_OR_TOK   shift, and go to state 54
    BIT_AND_TOK  shift, and go to state 55
    BIT_XOR_TOK  shift, and go to state 56
    BIT_LSH_TOK  shift, and go to state 57
    BIT_RSH_TOK  shift, and go to state 58

    $default  reduce using rule 3 (expression)


State 22

   14 arithmetic_expression: arithmetic_expression . PLUS_TOK arithmetic_expression
   15                      | arithmetic_expression . MINUS_TOK arithmetic_expression
   16                      | arithmetic_expression . MULT_TOK arithmetic_expression
   17                      | arithmetic_expression . DIV_TOK arithmetic_expression
   19                      | OPAREN_TOK arithmetic_expression . CPAREN_TOK

    CPAREN_TOK  shift, and go to state 59
    PLUS_TOK    shift, and go to state 42
    MINUS_TOK   shift, and go to state 43
    MULT_TOK    shift, and go to state 44
    DIV_TOK     shift, and go to state 45


State 23

   25 boolean_expression: boolean_expression . OR_TOK boolean_expression
   26                   | boolean_expression . AND_TOK boolean_expression
   27                   | boolean_expression . EQ_TOK boolean_expression
   28                   | boolean_expression . NEQ_TOK boolean_expression
   29                   | boolean_expression . LEQ_TOK boolean_expression
   30                   | boolean_expression . GEQ_TOK boolean_expression
   31                   | boolean_expression . MORE_TOK boolean_expression
   32                   | boolean_expression . LESS_TOK boolean_expression
   34                   | OPAREN_TOK boolean_expression . CPAREN_TOK

    CPAREN_TOK  shift, and go to state 60
    OR_TOK      shift, and go to state 46
    AND_TOK     shift, and go to state 47
    EQ_TOK      shift, and go to state 48
    GEQ_TOK     shift, and go to state 49
    LEQ_TOK     shift, and go to state 50
    NEQ_TOK     shift, and go to state 51
    MORE_TOK    shift, and go to state 52
    LESS_TOK    shift, and go to state 53


State 24

   39 bitwise_expression: bitwise_expression . BIT_AND_TOK bitwise_expression
   40                   | bitwise_expression . BIT_OR_TOK bitwise_expression
   41                   | bitwise_expression . BIT_XOR_TOK bitwise_expression
   42                   | bitwise_expression . BIT_LSH_TOK bitwise_expression
   43                   | bitwise_expression . BIT_RSH_TOK bitwise_expression
   45                   | OPAREN_TOK bitwise_expression . CPAREN_TOK

    CPAREN_TOK   shift, and go to state 61
    BIT_OR_TOK   shift, and go to state 54
    BIT_AND_TOK  shift, and go to state 55
    BIT_XOR_TOK  shift, and go to state 56
    BIT_LSH_TOK  shift, and go to state 57
    BIT_RSH_TOK  shift, and go to state 58


State 25

   19 arithmetic_expression: OPAREN_TOK . arithmetic_expression CPAREN_TOK

    OPAREN_TOK    shift, and go to state 25
    MINUS_TOK     shift, and go to state 2
    FLOAT_TOK     shift, and go to state 4
    SYMBOL_TOK    shift, and go to state 8
    UNSIGNED_TOK  shift, and go to state 26
    INTEGER_TOK   shift, and go to state 27
    FLOATING_TOK  shift, and go to state 11

    compound_symbol         go to state 28
    exponent_numeric_value  go to state 15
    arithmetic_factor       go to state 29
    arithmetic_expression   go to state 22


State 26

   10 arithmetic_factor: UNSIGNED_TOK .

    $default  reduce using rule 10 (arithmetic_factor)


State 27

    7 exponent_numeric_value: INTEGER_TOK .
    8 arithmetic_factor: INTEGER_TOK .

    CARAT_TOK  reduce using rule 7 (exponent_numeric_value)
    $default   reduce using rule 8 (arithmetic_factor)


State 28

    5 compound_symbol: compound_symbol . DOT_TOK SYMBOL_TOK
   12 arithmetic_factor: compound_symbol .

    DOT_TOK  shift, and go to state 40

    $default  reduce using rule 12 (arithmetic_factor)


State 29

   13 arithmetic_expression: arithmetic_factor .

    $default  reduce using rule 13 (arithmetic_expression)


State 30

   14 arithmetic_expression: arithmetic_expression . PLUS_TOK arithmetic_expression
   15                      | arithmetic_expression . MINUS_TOK arithmetic_expression
   16                      | arithmetic_expression . MULT_TOK arithmetic_expression
   17                      | arithmetic_expression . DIV_TOK arithmetic_expression
   18                      | MINUS_TOK arithmetic_expression .

    $default  reduce using rule 18 (arithmetic_expression)


State 31

   45 bitwise_expression: OPAREN_TOK . bitwise_expression CPAREN_TOK

    OPAREN_TOK    shift, and go to state 31
    BIT_NOT_TOK   shift, and go to state 3
    SYMBOL_TOK    shift, and go to state 8
    UNSIGNED_TOK  shift, and go to state 32
    INTEGER_TOK   shift, and go to state 33

    compound_symbol     go to state 34
    bitwise_factor      go to state 20
    bitwise_expression  go to state 24


State 32

   36 bitwise_factor: UNSIGNED_TOK .

    $default  reduce using rule 36 (bitwise_factor)


State 33

   35 bitwise_factor: INTEGER_TOK .

    $default  reduce using rule 35 (bitwise_factor)


State 34

    5 compound_symbol: compound_symbol . DOT_TOK SYMBOL_TOK
   37 bitwise_factor: compound_symbol .

    DOT_TOK  shift, and go to state 40

    $default  reduce using rule 37 (bitwise_factor)


State 35

   39 bitwise_expression: bitwise_expression . BIT_AND_TOK bitwise_expression
   40                   | bitwise_expression . BIT_OR_TOK bitwise_expression
   41                   | bitwise_expression . BIT_XOR_TOK bitwise_expression
   42                   | bitwise_expression . BIT_LSH_TOK bitwise_expression
   43                   | bitwise_expression . BIT_RSH_TOK bitwise_expression
   44                   | BIT_NOT_TOK bitwise_expression .

    BIT_OR_TOK   shift, and go to state 54
    BIT_AND_TOK  shift, and go to state 55
    BIT_XOR_TOK  shift, and go to state 56
    BIT_LSH_TOK  shift, and go to state 57
    BIT_RSH_TOK  shift, and go to state 58

    BIT_OR_TOK   [reduce using rule 44 (bitwise_expression)]
    BIT_AND_TOK  [reduce using rule 44 (bitwise_expression)]
    BIT_XOR_TOK  [reduce using rule 44 (bitwise_expression)]
    BIT_LSH_TOK  [reduce using rule 44 (bitwise_expression)]
    BIT_RSH_TOK  [reduce using rule 44 (bitwise_expression)]
    $default     reduce using rule 44 (bitwise_expression)


State 36

   34 boolean_expression: OPAREN_TOK . boolean_expression CPAREN_TOK

    OPAREN_TOK    shift, and go to state 36
    FLOAT_TOK     shift, and go to state 4
    NOT_TOK       shift, and go to state 5
    TRUE_TOK      shift, and go to state 6
    FALSE_TOK     shift, and go to state 7
    SYMBOL_TOK    shift, and go to state 8
    UNSIGNED_TOK  shift, and go to state 26
    INTEGER_TOK   shift, and go to state 27
    FLOATING_TOK  shift, and go to state 11
    STRING_TOK    shift, and go to state 12

    compound_symbol         go to state 28
    exponent_numeric_value  go to state 15
    arithmetic_factor       go to state 37
    boolean_factor          go to state 18
    boolean_expression      go to state 23


State 37

   20 boolean_factor: arithmetic_factor .

    $default  reduce using rule 20 (boolean_factor)


State 38

   25 boolean_expression: boolean_expression . OR_TOK boolean_expression
   26                   | boolean_expression . AND_TOK boolean_expression
   27                   | boolean_expression . EQ_TOK boolean_expression
   28                   | boolean_expression . NEQ_TOK boolean_expression
   29                   | boolean_expression . LEQ_TOK boolean_expression
   30                   | boolean_expression . GEQ_TOK boolean_expression
   31                   | boolean_expression . MORE_TOK boolean_expression
   32                   | boolean_expression . LESS_TOK boolean_expression
   33                   | NOT_TOK boolean_expression .

    OR_TOK    shift, and go to state 46
    AND_TOK   shift, and go to state 47
    EQ_TOK    shift, and go to state 48
    GEQ_TOK   shift, and go to state 49
    LEQ_TOK   shift, and go to state 50
    NEQ_TOK   shift, and go to state 51
    MORE_TOK  shift, and go to state 52
    LESS_TOK  shift, and go to state 53

    OR_TOK    [reduce using rule 33 (boolean_expression)]
    AND_TOK   [reduce using rule 33 (boolean_expression)]
    EQ_TOK    [reduce using rule 33 (boolean_expression)]
    GEQ_TOK   [reduce using rule 33 (boolean_expression)]
    LEQ_TOK   [reduce using rule 33 (boolean_expression)]
    NEQ_TOK   [reduce using rule 33 (boolean_expression)]
    MORE_TOK  [reduce using rule 33 (boolean_expression)]
    LESS_TOK  [reduce using rule 33 (boolean_expression)]
    $default  reduce using rule 33 (boolean_expression)


State 39

    0 $accept: expression $end .

    $default  accept


State 40

    5 compound_symbol: compound_symbol DOT_TOK . SYMBOL_TOK

    SYMBOL_TOK  shift, and go to state 62


State 41

   11 arithmetic_factor: exponent_numeric_value CARAT_TOK . exponent_numeric_value

    INTEGER_TOK   shift, and go to state 63
    FLOATING_TOK  shift, and go to state 11

    exponent_numeric_value  go to state 64


State 42

   14 arithmetic_expression: arithmetic_expression PLUS_TOK . arithmetic_expression

    OPAREN_TOK    shift, and go to state 25
    MINUS_TOK     shift, and go to state 2
    FLOAT_TOK     shift, and go to state 4
    SYMBOL_TOK    shift, and go to state 8
    UNSIGNED_TOK  shift, and go to state 26
    INTEGER_TOK   shift, and go to state 27
    FLOATING_TOK  shift, and go to state 11

    compound_symbol         go to state 28
    exponent_numeric_value  go to state 15
    arithmetic_factor       go to state 29
    arithmetic_expression   go to state 65


State 43

   15 arithmetic_expression: arithmetic_expression MINUS_TOK . arithmetic_expression

    OPAREN_TOK    shift, and go to state 25
    MINUS_TOK     shift, and go to state 2
    FLOAT_TOK     shift, and go to state 4
    SYMBOL_TOK    shift, and go to state 8
    UNSIGNED_TOK  shift, and go to state 26
    INTEGER_TOK   shift, and go to state 27
    FLOATING_TOK  shift, and go to state 11

    compound_symbol         go to state 28
    exponent_numeric_value  go to state 15
    arithmetic_factor       go to state 29
    arithmetic_expression   go to state 66


State 44

   16 arithmetic_expression: arithmetic_expression MULT_TOK . arithmetic_expression

    OPAREN_TOK    shift, and go to state 25
    MINUS_TOK     shift, and go to state 2
    FLOAT_TOK     shift, and go to state 4
    SYMBOL_TOK    shift, and go to state 8
    UNSIGNED_TOK  shift, and go to state 26
    INTEGER_TOK   shift, and go to state 27
    FLOATING_TOK  shift, and go to state 11

    compound_symbol         go to state 28
    exponent_numeric_value  go to state 15
    arithmetic_factor       go to state 29
    arithmetic_expression   go to state 67


State 45

   17 arithmetic_expression: arithmetic_expression DIV_TOK . arithmetic_expression

    OPAREN_TOK    shift, and go to state 25
    MINUS_TOK     shift, and go to state 2
    FLOAT_TOK     shift, and go to state 4
    SYMBOL_TOK    shift, and go to state 8
    UNSIGNED_TOK  shift, and go to state 26
    INTEGER_TOK   shift, and go to state 27
    FLOATING_TOK  shift, and go to state 11

    compound_symbol         go to state 28
    exponent_numeric_value  go to state 15
    arithmetic_factor       go to state 29
    arithmetic_expression   go to state 68


State 46

   25 boolean_expression: boolean_expression OR_TOK . boolean_expression

    OPAREN_TOK    shift, and go to state 36
    FLOAT_TOK     shift, and go to state 4
    NOT_TOK       shift, and go to state 5
    TRUE_TOK      shift, and go to state 6
    FALSE_TOK     shift, and go to state 7
    SYMBOL_TOK    shift, and go to state 8
    UNSIGNED_TOK  shift, and go to state 26
    INTEGER_TOK   shift, and go to state 27
    FLOATING_TOK  shift, and go to state 11
    STRING_TOK    shift, and go to state 12

    compound_symbol         go to state 28
    exponent_numeric_value  go to state 15
    arithmetic_factor       go to state 37
    boolean_factor          go to state 18
    boolean_expression      go to state 69


State 47

   26 boolean_expression: boolean_expression AND_TOK . boolean_expression

    OPAREN_TOK    shift, and go to state 36
    FLOAT_TOK     shift, and go to state 4
    NOT_TOK       shift, and go to state 5
    TRUE_TOK      shift, and go to state 6
    FALSE_TOK     shift, and go to state 7
    SYMBOL_TOK    shift, and go to state 8
    UNSIGNED_TOK  shift, and go to state 26
    INTEGER_TOK   shift, and go to state 27
    FLOATING_TOK  shift, and go to state 11
    STRING_TOK    shift, and go to state 12

    compound_symbol         go to state 28
    exponent_numeric_value  go to state 15
    arithmetic_factor       go to state 37
    boolean_factor          go to state 18
    boolean_expression      go to state 70


State 48

   27 boolean_expression: boolean_expression EQ_TOK . boolean_expression

    OPAREN_TOK    shift, and go to state 36
    FLOAT_TOK     shift, and go to state 4
    NOT_TOK       shift, and go to state 5
    TRUE_TOK      shift, and go to state 6
    FALSE_TOK     shift, and go to state 7
    SYMBOL_TOK    shift, and go to state 8
    UNSIGNED_TOK  shift, and go to state 26
    INTEGER_TOK   shift, and go to state 27
    FLOATING_TOK  shift, and go to state 11
    STRING_TOK    shift, and go to state 12

    compound_symbol         go to state 28
    exponent_numeric_value  go to state 15
    arithmetic_factor       go to state 37
    boolean_factor          go to state 18
    boolean_expression      go to state 71


State 49

   30 boolean_expression: boolean_expression GEQ_TOK . boolean_expression

    OPAREN_TOK    shift, and go to state 36
    FLOAT_TOK     shift, and go to state 4
    NOT_TOK       shift, and go to state 5
    TRUE_TOK      shift, and go to state 6
    FALSE_TOK     shift, and go to state 7
    SYMBOL_TOK    shift, and go to state 8
    UNSIGNED_TOK  shift, and go to state 26
    INTEGER_TOK   shift, and go to state 27
    FLOATING_TOK  shift, and go to state 11
    STRING_TOK    shift, and go to state 12

    compound_symbol         go to state 28
    exponent_numeric_value  go to state 15
    arithmetic_factor       go to state 37
    boolean_factor          go to state 18
    boolean_expression      go to state 72


State 50

   29 boolean_expression: boolean_expression LEQ_TOK . boolean_expression

    OPAREN_TOK    shift, and go to state 36
    FLOAT_TOK     shift, and go to state 4
    NOT_TOK       shift, and go to state 5
    TRUE_TOK      shift, and go to state 6
    FALSE_TOK     shift, and go to state 7
    SYMBOL_TOK    shift, and go to state 8
    UNSIGNED_TOK  shift, and go to state 26
    INTEGER_TOK   shift, and go to state 27
    FLOATING_TOK  shift, and go to state 11
    STRING_TOK    shift, and go to state 12

    compound_symbol         go to state 28
    exponent_numeric_value  go to state 15
    arithmetic_factor       go to state 37
    boolean_factor          go to state 18
    boolean_expression      go to state 73


State 51

   28 boolean_expression: boolean_expression NEQ_TOK . boolean_expression

    OPAREN_TOK    shift, and go to state 36
    FLOAT_TOK     shift, and go to state 4
    NOT_TOK       shift, and go to state 5
    TRUE_TOK      shift, and go to state 6
    FALSE_TOK     shift, and go to state 7
    SYMBOL_TOK    shift, and go to state 8
    UNSIGNED_TOK  shift, and go to state 26
    INTEGER_TOK   shift, and go to state 27
    FLOATING_TOK  shift, and go to state 11
    STRING_TOK    shift, and go to state 12

    compound_symbol         go to state 28
    exponent_numeric_value  go to state 15
    arithmetic_factor       go to state 37
    boolean_factor          go to state 18
    boolean_expression      go to state 74


State 52

   31 boolean_expression: boolean_expression MORE_TOK . boolean_expression

    OPAREN_TOK    shift, and go to state 36
    FLOAT_TOK     shift, and go to state 4
    NOT_TOK       shift, and go to state 5
    TRUE_TOK      shift, and go to state 6
    FALSE_TOK     shift, and go to state 7
    SYMBOL_TOK    shift, and go to state 8
    UNSIGNED_TOK  shift, and go to state 26
    INTEGER_TOK   shift, and go to state 27
    FLOATING_TOK  shift, and go to state 11
    STRING_TOK    shift, and go to state 12

    compound_symbol         go to state 28
    exponent_numeric_value  go to state 15
    arithmetic_factor       go to state 37
    boolean_factor          go to state 18
    boolean_expression      go to state 75


State 53

   32 boolean_expression: boolean_expression LESS_TOK . boolean_expression

    OPAREN_TOK    shift, and go to state 36
    FLOAT_TOK     shift, and go to state 4
    NOT_TOK       shift, and go to state 5
    TRUE_TOK      shift, and go to state 6
    FALSE_TOK     shift, and go to state 7
    SYMBOL_TOK    shift, and go to state 8
    UNSIGNED_TOK  shift, and go to state 26
    INTEGER_TOK   shift, and go to state 27
    FLOATING_TOK  shift, and go to state 11
    STRING_TOK    shift, and go to state 12

    compound_symbol         go to state 28
    exponent_numeric_value  go to state 15
    arithmetic_factor       go to state 37
    boolean_factor          go to state 18
    boolean_expression      go to state 76


State 54

   40 bitwise_expression: bitwise_expression BIT_OR_TOK . bitwise_expression

    OPAREN_TOK    shift, and go to state 31
    BIT_NOT_TOK   shift, and go to state 3
    SYMBOL_TOK    shift, and go to state 8
    UNSIGNED_TOK  shift, and go to state 32
    INTEGER_TOK   shift, and go to state 33

    compound_symbol     go to state 34
    bitwise_factor      go to state 20
    bitwise_expression  go to state 77


State 55

   39 bitwise_expression: bitwise_expression BIT_AND_TOK . bitwise_expression

    OPAREN_TOK    shift, and go to state 31
    BIT_NOT_TOK   shift, and go to state 3
    SYMBOL_TOK    shift, and go to state 8
    UNSIGNED_TOK  shift, and go to state 32
    INTEGER_TOK   shift, and go to state 33

    compound_symbol     go to state 34
    bitwise_factor      go to state 20
    bitwise_expression  go to state 78


State 56

   41 bitwise_expression: bitwise_expression BIT_XOR_TOK . bitwise_expression

    OPAREN_TOK    shift, and go to state 31
    BIT_NOT_TOK   shift, and go to state 3
    SYMBOL_TOK    shift, and go to state 8
    UNSIGNED_TOK  shift, and go to state 32
    INTEGER_TOK   shift, and go to state 33

    compound_symbol     go to state 34
    bitwise_factor      go to state 20
    bitwise_expression  go to state 79


State 57

   42 bitwise_expression: bitwise_expression BIT_LSH_TOK . bitwise_expression

    OPAREN_TOK    shift, and go to state 31
    BIT_NOT_TOK   shift, and go to state 3
    SYMBOL_TOK    shift, and go to state 8
    UNSIGNED_TOK  shift, and go to state 32
    INTEGER_TOK   shift, and go to state 33

    compound_symbol     go to state 34
    bitwise_factor      go to state 20
    bitwise_expression  go to state 80


State 58

   43 bitwise_expression: bitwise_expression BIT_RSH_TOK . bitwise_expression

    OPAREN_TOK    shift, and go to state 31
    BIT_NOT_TOK   shift, and go to state 3
    SYMBOL_TOK    shift, and go to state 8
    UNSIGNED_TOK  shift, and go to state 32
    INTEGER_TOK   shift, and go to state 33

    compound_symbol     go to state 34
    bitwise_factor      go to state 20
    bitwise_expression  go to state 81


State 59

   19 arithmetic_expression: OPAREN_TOK arithmetic_expression CPAREN_TOK .

    $default  reduce using rule 19 (arithmetic_expression)


State 60

   34 boolean_expression: OPAREN_TOK boolean_expression CPAREN_TOK .

    $default  reduce using rule 34 (boolean_expression)


State 61

   45 bitwise_expression: OPAREN_TOK bitwise_expression CPAREN_TOK .

    $default  reduce using rule 45 (bitwise_expression)


State 62

    5 compound_symbol: compound_symbol DOT_TOK SYMBOL_TOK .

    $default  reduce using rule 5 (compound_symbol)


State 63

    7 exponent_numeric_value: INTEGER_TOK .

    $default  reduce using rule 7 (exponent_numeric_value)


State 64

   11 arithmetic_factor: exponent_numeric_value CARAT_TOK exponent_numeric_value .

    $default  reduce using rule 11 (arithmetic_factor)


State 65

   14 arithmetic_expression: arithmetic_expression . PLUS_TOK arithmetic_expression
   14                      | arithmetic_expression PLUS_TOK arithmetic_expression .
   15                      | arithmetic_expression . MINUS_TOK arithmetic_expression
   16                      | arithmetic_expression . MULT_TOK arithmetic_expression
   17                      | arithmetic_expression . DIV_TOK arithmetic_expression

    MULT_TOK  shift, and go to state 44
    DIV_TOK   shift, and go to state 45

    $default  reduce using rule 14 (arithmetic_expression)


State 66

   14 arithmetic_expression: arithmetic_expression . PLUS_TOK arithmetic_expression
   15                      | arithmetic_expression . MINUS_TOK arithmetic_expression
   15                      | arithmetic_expression MINUS_TOK arithmetic_expression .
   16                      | arithmetic_expression . MULT_TOK arithmetic_expression
   17                      | arithmetic_expression . DIV_TOK arithmetic_expression

    MULT_TOK  shift, and go to state 44
    DIV_TOK   shift, and go to state 45

    $default  reduce using rule 15 (arithmetic_expression)


State 67

   14 arithmetic_expression: arithmetic_expression . PLUS_TOK arithmetic_expression
   15                      | arithmetic_expression . MINUS_TOK arithmetic_expression
   16                      | arithmetic_expression . MULT_TOK arithmetic_expression
   16                      | arithmetic_expression MULT_TOK arithmetic_expression .
   17                      | arithmetic_expression . DIV_TOK arithmetic_expression

    $default  reduce using rule 16 (arithmetic_expression)


State 68

   14 arithmetic_expression: arithmetic_expression . PLUS_TOK arithmetic_expression
   15                      | arithmetic_expression . MINUS_TOK arithmetic_expression
   16                      | arithmetic_expression . MULT_TOK arithmetic_expression
   17                      | arithmetic_expression . DIV_TOK arithmetic_expression
   17                      | arithmetic_expression DIV_TOK arithmetic_expression .

    $default  reduce using rule 17 (arithmetic_expression)


State 69

   25 boolean_expression: boolean_expression . OR_TOK boolean_expression
   25                   | boolean_expression OR_TOK boolean_expression .
   26                   | boolean_expression . AND_TOK boolean_expression
   27                   | boolean_expression . EQ_TOK boolean_expression
   28                   | boolean_expression . NEQ_TOK boolean_expression
   29                   | boolean_expression . LEQ_TOK boolean_expression
   30                   | boolean_expression . GEQ_TOK boolean_expression
   31                   | boolean_expression . MORE_TOK boolean_expression
   32                   | boolean_expression . LESS_TOK boolean_expression

    OR_TOK    shift, and go to state 46
    AND_TOK   shift, and go to state 47
    EQ_TOK    shift, and go to state 48
    GEQ_TOK   shift, and go to state 49
    LEQ_TOK   shift, and go to state 50
    NEQ_TOK   shift, and go to state 51
    MORE_TOK  shift, and go to state 52
    LESS_TOK  shift, and go to state 53

    OR_TOK    [reduce using rule 25 (boolean_expression)]
    AND_TOK   [reduce using rule 25 (boolean_expression)]
    EQ_TOK    [reduce using rule 25 (boolean_expression)]
    GEQ_TOK   [reduce using rule 25 (boolean_expression)]
    LEQ_TOK   [reduce using rule 25 (boolean_expression)]
    NEQ_TOK   [reduce using rule 25 (boolean_expression)]
    MORE_TOK  [reduce using rule 25 (boolean_expression)]
    LESS_TOK  [reduce using rule 25 (boolean_expression)]
    $default  reduce using rule 25 (boolean_expression)


State 70

   25 boolean_expression: boolean_expression . OR_TOK boolean_expression
   26                   | boolean_expression . AND_TOK boolean_expression
   26                   | boolean_expression AND_TOK boolean_expression .
   27                   | boolean_expression . EQ_TOK boolean_expression
   28                   | boolean_expression . NEQ_TOK boolean_expression
   29                   | boolean_expression . LEQ_TOK boolean_expression
   30                   | boolean_expression . GEQ_TOK boolean_expression
   31                   | boolean_expression . MORE_TOK boolean_expression
   32                   | boolean_expression . LESS_TOK boolean_expression

    OR_TOK    shift, and go to state 46
    AND_TOK   shift, and go to state 47
    EQ_TOK    shift, and go to state 48
    GEQ_TOK   shift, and go to state 49
    LEQ_TOK   shift, and go to state 50
    NEQ_TOK   shift, and go to state 51
    MORE_TOK  shift, and go to state 52
    LESS_TOK  shift, and go to state 53

    OR_TOK    [reduce using rule 26 (boolean_expression)]
    AND_TOK   [reduce using rule 26 (boolean_expression)]
    EQ_TOK    [reduce using rule 26 (boolean_expression)]
    GEQ_TOK   [reduce using rule 26 (boolean_expression)]
    LEQ_TOK   [reduce using rule 26 (boolean_expression)]
    NEQ_TOK   [reduce using rule 26 (boolean_expression)]
    MORE_TOK  [reduce using rule 26 (boolean_expression)]
    LESS_TOK  [reduce using rule 26 (boolean_expression)]
    $default  reduce using rule 26 (boolean_expression)


State 71

   25 boolean_expression: boolean_expression . OR_TOK boolean_expression
   26                   | boolean_expression . AND_TOK boolean_expression
   27                   | boolean_expression . EQ_TOK boolean_expression
   27                   | boolean_expression EQ_TOK boolean_expression .
   28                   | boolean_expression . NEQ_TOK boolean_expression
   29                   | boolean_expression . LEQ_TOK boolean_expression
   30                   | boolean_expression . GEQ_TOK boolean_expression
   31                   | boolean_expression . MORE_TOK boolean_expression
   32                   | boolean_expression . LESS_TOK boolean_expression

    OR_TOK    shift, and go to state 46
    AND_TOK   shift, and go to state 47
    EQ_TOK    shift, and go to state 48
    GEQ_TOK   shift, and go to state 49
    LEQ_TOK   shift, and go to state 50
    NEQ_TOK   shift, and go to state 51
    MORE_TOK  shift, and go to state 52
    LESS_TOK  shift, and go to state 53

    OR_TOK    [reduce using rule 27 (boolean_expression)]
    AND_TOK   [reduce using rule 27 (boolean_expression)]
    EQ_TOK    [reduce using rule 27 (boolean_expression)]
    GEQ_TOK   [reduce using rule 27 (boolean_expression)]
    LEQ_TOK   [reduce using rule 27 (boolean_expression)]
    NEQ_TOK   [reduce using rule 27 (boolean_expression)]
    MORE_TOK  [reduce using rule 27 (boolean_expression)]
    LESS_TOK  [reduce using rule 27 (boolean_expression)]
    $default  reduce using rule 27 (boolean_expression)


State 72

   25 boolean_expression: boolean_expression . OR_TOK boolean_expression
   26                   | boolean_expression . AND_TOK boolean_expression
   27                   | boolean_expression . EQ_TOK boolean_expression
   28                   | boolean_expression . NEQ_TOK boolean_expression
   29                   | boolean_expression . LEQ_TOK boolean_expression
   30                   | boolean_expression . GEQ_TOK boolean_expression
   30                   | boolean_expression GEQ_TOK boolean_expression .
   31                   | boolean_expression . MORE_TOK boolean_expression
   32                   | boolean_expression . LESS_TOK boolean_expression

    OR_TOK    shift, and go to state 46
    AND_TOK   shift, and go to state 47
    EQ_TOK    shift, and go to state 48
    GEQ_TOK   shift, and go to state 49
    LEQ_TOK   shift, and go to state 50
    NEQ_TOK   shift, and go to state 51
    MORE_TOK  shift, and go to state 52
    LESS_TOK  shift, and go to state 53

    OR_TOK    [reduce using rule 30 (boolean_expression)]
    AND_TOK   [reduce using rule 30 (boolean_expression)]
    EQ_TOK    [reduce using rule 30 (boolean_expression)]
    GEQ_TOK   [reduce using rule 30 (boolean_expression)]
    LEQ_TOK   [reduce using rule 30 (boolean_expression)]
    NEQ_TOK   [reduce using rule 30 (boolean_expression)]
    MORE_TOK  [reduce using rule 30 (boolean_expression)]
    LESS_TOK  [reduce using rule 30 (boolean_expression)]
    $default  reduce using rule 30 (boolean_expression)


State 73

   25 boolean_expression: boolean_expression . OR_TOK boolean_expression
   26                   | boolean_expression . AND_TOK boolean_expression
   27                   | boolean_expression . EQ_TOK boolean_expression
   28                   | boolean_expression . NEQ_TOK boolean_expression
   29                   | boolean_expression . LEQ_TOK boolean_expression
   29                   | boolean_expression LEQ_TOK boolean_expression .
   30                   | boolean_expression . GEQ_TOK boolean_expression
   31                   | boolean_expression . MORE_TOK boolean_expression
   32                   | boolean_expression . LESS_TOK boolean_expression

    OR_TOK    shift, and go to state 46
    AND_TOK   shift, and go to state 47
    EQ_TOK    shift, and go to state 48
    GEQ_TOK   shift, and go to state 49
    LEQ_TOK   shift, and go to state 50
    NEQ_TOK   shift, and go to state 51
    MORE_TOK  shift, and go to state 52
    LESS_TOK  shift, and go to state 53

    OR_TOK    [reduce using rule 29 (boolean_expression)]
    AND_TOK   [reduce using rule 29 (boolean_expression)]
    EQ_TOK    [reduce using rule 29 (boolean_expression)]
    GEQ_TOK   [reduce using rule 29 (boolean_expression)]
    LEQ_TOK   [reduce using rule 29 (boolean_expression)]
    NEQ_TOK   [reduce using rule 29 (boolean_expression)]
    MORE_TOK  [reduce using rule 29 (boolean_expression)]
    LESS_TOK  [reduce using rule 29 (boolean_expression)]
    $default  reduce using rule 29 (boolean_expression)


State 74

   25 boolean_expression: boolean_expression . OR_TOK boolean_expression
   26                   | boolean_expression . AND_TOK boolean_expression
   27                   | boolean_expression . EQ_TOK boolean_expression
   28                   | boolean_expression . NEQ_TOK boolean_expression
   28                   | boolean_expression NEQ_TOK boolean_expression .
   29                   | boolean_expression . LEQ_TOK boolean_expression
   30                   | boolean_expression . GEQ_TOK boolean_expression
   31                   | boolean_expression . MORE_TOK boolean_expression
   32                   | boolean_expression . LESS_TOK boolean_expression

    OR_TOK    shift, and go to state 46
    AND_TOK   shift, and go to state 47
    EQ_TOK    shift, and go to state 48
    GEQ_TOK   shift, and go to state 49
    LEQ_TOK   shift, and go to state 50
    NEQ_TOK   shift, and go to state 51
    MORE_TOK  shift, and go to state 52
    LESS_TOK  shift, and go to state 53

    OR_TOK    [reduce using rule 28 (boolean_expression)]
    AND_TOK   [reduce using rule 28 (boolean_expression)]
    EQ_TOK    [reduce using rule 28 (boolean_expression)]
    GEQ_TOK   [reduce using rule 28 (boolean_expression)]
    LEQ_TOK   [reduce using rule 28 (boolean_expression)]
    NEQ_TOK   [reduce using rule 28 (boolean_expression)]
    MORE_TOK  [reduce using rule 28 (boolean_expression)]
    LESS_TOK  [reduce using rule 28 (boolean_expression)]
    $default  reduce using rule 28 (boolean_expression)


State 75

   25 boolean_expression: boolean_expression . OR_TOK boolean_expression
   26                   | boolean_expression . AND_TOK boolean_expression
   27                   | boolean_expression . EQ_TOK boolean_expression
   28                   | boolean_expression . NEQ_TOK boolean_expression
   29                   | boolean_expression . LEQ_TOK boolean_expression
   30                   | boolean_expression . GEQ_TOK boolean_expression
   31                   | boolean_expression . MORE_TOK boolean_expression
   31                   | boolean_expression MORE_TOK boolean_expression .
   32                   | boolean_expression . LESS_TOK boolean_expression

    OR_TOK    shift, and go to state 46
    AND_TOK   shift, and go to state 47
    EQ_TOK    shift, and go to state 48
    GEQ_TOK   shift, and go to state 49
    LEQ_TOK   shift, and go to state 50
    NEQ_TOK   shift, and go to state 51
    MORE_TOK  shift, and go to state 52
    LESS_TOK  shift, and go to state 53

    OR_TOK    [reduce using rule 31 (boolean_expression)]
    AND_TOK   [reduce using rule 31 (boolean_expression)]
    EQ_TOK    [reduce using rule 31 (boolean_expression)]
    GEQ_TOK   [reduce using rule 31 (boolean_expression)]
    LEQ_TOK   [reduce using rule 31 (boolean_expression)]
    NEQ_TOK   [reduce using rule 31 (boolean_expression)]
    MORE_TOK  [reduce using rule 31 (boolean_expression)]
    LESS_TOK  [reduce using rule 31 (boolean_expression)]
    $default  reduce using rule 31 (boolean_expression)


State 76

   25 boolean_expression: boolean_expression . OR_TOK boolean_expression
   26                   | boolean_expression . AND_TOK boolean_expression
   27                   | boolean_expression . EQ_TOK boolean_expression
   28                   | boolean_expression . NEQ_TOK boolean_expression
   29                   | boolean_expression . LEQ_TOK boolean_expression
   30                   | boolean_expression . GEQ_TOK boolean_expression
   31                   | boolean_expression . MORE_TOK boolean_expression
   32                   | boolean_expression . LESS_TOK boolean_expression
   32                   | boolean_expression LESS_TOK boolean_expression .

    OR_TOK    shift, and go to state 46
    AND_TOK   shift, and go to state 47
    EQ_TOK    shift, and go to state 48
    GEQ_TOK   shift, and go to state 49
    LEQ_TOK   shift, and go to state 50
    NEQ_TOK   shift, and go to state 51
    MORE_TOK  shift, and go to state 52
    LESS_TOK  shift, and go to state 53

    OR_TOK    [reduce using rule 32 (boolean_expression)]
    AND_TOK   [reduce using rule 32 (boolean_expression)]
    EQ_TOK    [reduce using rule 32 (boolean_expression)]
    GEQ_TOK   [reduce using rule 32 (boolean_expression)]
    LEQ_TOK   [reduce using rule 32 (boolean_expression)]
    NEQ_TOK   [reduce using rule 32 (boolean_expression)]
    MORE_TOK  [reduce using rule 32 (boolean_expression)]
    LESS_TOK  [reduce using rule 32 (boolean_expression)]
    $default  reduce using rule 32 (boolean_expression)


State 77

   39 bitwise_expression: bitwise_expression . BIT_AND_TOK bitwise_expression
   40                   | bitwise_expression . BIT_OR_TOK bitwise_expression
   40                   | bitwise_expression BIT_OR_TOK bitwise_expression .
   41                   | bitwise_expression . BIT_XOR_TOK bitwise_expression
   42                   | bitwise_expression . BIT_LSH_TOK bitwise_expression
   43                   | bitwise_expression . BIT_RSH_TOK bitwise_expression

    BIT_OR_TOK   shift, and go to state 54
    BIT_AND_TOK  shift, and go to state 55
    BIT_XOR_TOK  shift, and go to state 56
    BIT_LSH_TOK  shift, and go to state 57
    BIT_RSH_TOK  shift, and go to state 58

    BIT_OR_TOK   [reduce using rule 40 (bitwise_expression)]
    BIT_AND_TOK  [reduce using rule 40 (bitwise_expression)]
    BIT_XOR_TOK  [reduce using rule 40 (bitwise_expression)]
    BIT_LSH_TOK  [reduce using rule 40 (bitwise_expression)]
    BIT_RSH_TOK  [reduce using rule 40 (bitwise_expression)]
    $default     reduce using rule 40 (bitwise_expression)


State 78

   39 bitwise_expression: bitwise_expression . BIT_AND_TOK bitwise_expression
   39                   | bitwise_expression BIT_AND_TOK bitwise_expression .
   40                   | bitwise_expression . BIT_OR_TOK bitwise_expression
   41                   | bitwise_expression . BIT_XOR_TOK bitwise_expression
   42                   | bitwise_expression . BIT_LSH_TOK bitwise_expression
   43                   | bitwise_expression . BIT_RSH_TOK bitwise_expression

    BIT_OR_TOK   shift, and go to state 54
    BIT_AND_TOK  shift, and go to state 55
    BIT_XOR_TOK  shift, and go to state 56
    BIT_LSH_TOK  shift, and go to state 57
    BIT_RSH_TOK  shift, and go to state 58

    BIT_OR_TOK   [reduce using rule 39 (bitwise_expression)]
    BIT_AND_TOK  [reduce using rule 39 (bitwise_expression)]
    BIT_XOR_TOK  [reduce using rule 39 (bitwise_expression)]
    BIT_LSH_TOK  [reduce using rule 39 (bitwise_expression)]
    BIT_RSH_TOK  [reduce using rule 39 (bitwise_expression)]
    $default     reduce using rule 39 (bitwise_expression)


State 79

   39 bitwise_expression: bitwise_expression . BIT_AND_TOK bitwise_expression
   40                   | bitwise_expression . BIT_OR_TOK bitwise_expression
   41                   | bitwise_expression . BIT_XOR_TOK bitwise_expression
   41                   | bitwise_expression BIT_XOR_TOK bitwise_expression .
   42                   | bitwise_expression . BIT_LSH_TOK bitwise_expression
   43                   | bitwise_expression . BIT_RSH_TOK bitwise_expression

    BIT_OR_TOK   shift, and go to state 54
    BIT_AND_TOK  shift, and go to state 55
    BIT_XOR_TOK  shift, and go to state 56
    BIT_LSH_TOK  shift, and go to state 57
    BIT_RSH_TOK  shift, and go to state 58

    BIT_OR_TOK   [reduce using rule 41 (bitwise_expression)]
    BIT_AND_TOK  [reduce using rule 41 (bitwise_expression)]
    BIT_XOR_TOK  [reduce using rule 41 (bitwise_expression)]
    BIT_LSH_TOK  [reduce using rule 41 (bitwise_expression)]
    BIT_RSH_TOK  [reduce using rule 41 (bitwise_expression)]
    $default     reduce using rule 41 (bitwise_expression)


State 80

   39 bitwise_expression: bitwise_expression . BIT_AND_TOK bitwise_expression
   40                   | bitwise_expression . BIT_OR_TOK bitwise_expression
   41                   | bitwise_expression . BIT_XOR_TOK bitwise_expression
   42                   | bitwise_expression . BIT_LSH_TOK bitwise_expression
   42                   | bitwise_expression BIT_LSH_TOK bitwise_expression .
   43                   | bitwise_expression . BIT_RSH_TOK bitwise_expression

    BIT_OR_TOK   shift, and go to state 54
    BIT_AND_TOK  shift, and go to state 55
    BIT_XOR_TOK  shift, and go to state 56
    BIT_LSH_TOK  shift, and go to state 57
    BIT_RSH_TOK  shift, and go to state 58

    BIT_OR_TOK   [reduce using rule 42 (bitwise_expression)]
    BIT_AND_TOK  [reduce using rule 42 (bitwise_expression)]
    BIT_XOR_TOK  [reduce using rule 42 (bitwise_expression)]
    BIT_LSH_TOK  [reduce using rule 42 (bitwise_expression)]
    BIT_RSH_TOK  [reduce using rule 42 (bitwise_expression)]
    $default     reduce using rule 42 (bitwise_expression)


State 81

   39 bitwise_expression: bitwise_expression . BIT_AND_TOK bitwise_expression
   40                   | bitwise_expression . BIT_OR_TOK bitwise_expression
   41                   | bitwise_expression . BIT_XOR_TOK bitwise_expression
   42                   | bitwise_expression . BIT_LSH_TOK bitwise_expression
   43                   | bitwise_expression . BIT_RSH_TOK bitwise_expression
   43                   | bitwise_expression BIT_RSH_TOK bitwise_expression .

    BIT_OR_TOK   shift, and go to state 54
    BIT_AND_TOK  shift, and go to state 55
    BIT_XOR_TOK  shift, and go to state 56
    BIT_LSH_TOK  shift, and go to state 57
    BIT_RSH_TOK  shift, and go to state 58

    BIT_OR_TOK   [reduce using rule 43 (bitwise_expression)]
    BIT_AND_TOK  [reduce using rule 43 (bitwise_expression)]
    BIT_XOR_TOK  [reduce using rule 43 (bitwise_expression)]
    BIT_LSH_TOK  [reduce using rule 43 (bitwise_expression)]
    BIT_RSH_TOK  [reduce using rule 43 (bitwise_expression)]
    $default     reduce using rule 43 (bitwise_expression)
